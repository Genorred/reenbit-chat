# -----------------------------------------
# 1) HTTP: перенаправляем всё на HTTPS, обслуживаем ACME-challenge
# -----------------------------------------
server {
    listen 80;
    server_name reenbit-chat.pp.ua;  # замените на ваш домен, можно проксировать через env при сборке

    # Отдаём challenge-файлы для Let's Encrypt
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }

    # Всё остальное → редирект на HTTPS
    location / {
        return 301 https://$host$request_uri;
    }
}

# -----------------------------------------
# 2) HTTPS: SSL+Reverse-Proxy / Static
# -----------------------------------------
server {
    listen 443 ssl http2;
    server_name reenbit-chat.pp.ua;

    # Пути к сертификатам, полученным certbot
    ssl_certificate     /etc/letsencrypt/live/reenbit-chat.pp.ua/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/reenbit-chat.pp.ua/privkey.pem;
    ssl_protocols       TLSv1.2 TLSv1.3;
    ssl_ciphers         HIGH:!aNULL:!MD5;

    # Прокси-секция для /api → бэкенд
    location /api/ {
        proxy_pass         http://server:5000/api/;
        proxy_http_version 1.1;

        proxy_set_header Host               $host;
        proxy_set_header X-Real-IP          $remote_addr;
        proxy_set_header X-Forwarded-For    $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto  $scheme;

        # Если веб-сокеты/long polling
        proxy_set_header Upgrade            $http_upgrade;
        proxy_set_header Connection         "upgrade";
    }

    # Отдача статических файлов React
    root  /usr/share/nginx/html;
    index index.html index.htm;

    location / {
        try_files $uri /index.html;
    }

    # Кэширование статических ассетов (необязательно)
    location ~* \.(js|css|png|jpg|jpeg|gif|svg|ico)$ {
        expires 30d;
        access_log off;
    }
}